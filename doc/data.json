{
    "project": {
        "name": "animatePaper.js",
        "description": "An animation library for paper.js",
        "version": "0.1"
    },
    "files": {
        "/Users/camille/github/animatePaper.js/src/animatePaper.js": {
            "name": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "modules": {
                "animatePaper": 1
            },
            "classes": {
                "Tween": 1,
                "frameManager": 1,
                "easing": 1,
                "Animation": 1,
                "fx": 1
            },
            "fors": {
                "Tween": 1,
                "frameManager": 1,
                "animatePaper": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "animatePaper": {
            "name": "animatePaper",
            "submodules": {},
            "classes": {
                "Tween": 1,
                "frameManager": 1,
                "animatePaper": 1,
                "easing": 1,
                "Animation": 1,
                "fx": 1
            },
            "fors": {
                "Tween": 1,
                "frameManager": 1,
                "animatePaper": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 582,
            "description": "An animation library for paper.js\ncamille.hodoul@gmail.com",
            "itemtype": "main"
        }
    },
    "classes": {
        "Tween": {
            "name": "Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "animatePaper",
            "namespace": "",
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 526,
            "description": "Tween class. TODO : figure out a way to add support for extra arguments to pass to the Tweens (like for rotate() )",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Property",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "Final",
                    "description": "value",
                    "type": "Mixed"
                },
                {
                    "name": "animation",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "frameManager": {
            "name": "frameManager",
            "shortname": "frameManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "animatePaper",
            "namespace": "",
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 73,
            "description": "The `frameManager` is used to bind and unbind multiple callbacks to an object's\n`onFrame`. If an object has at least one handler, it's `onFrame` handler will be\n{{#crossLink \"frameManager/frameManagerHandler:method\"}}{{/crossLink}}.",
            "static": 1
        },
        "animatePaper": {
            "name": "animatePaper",
            "shortname": "animatePaper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "animatePaper",
            "namespace": ""
        },
        "easing": {
            "name": "easing",
            "shortname": "easing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "animatePaper",
            "namespace": "",
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 156,
            "description": "Easing. Based on easing equations from Robert Penner (http://www.robertpenner.com/easing) and\nimplementation of these equations in https://github.com/jquery/jquery-ui/blob/master/ui/effect.js",
            "static": 1
        },
        "Animation": {
            "name": "Animation",
            "shortname": "Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "animatePaper",
            "namespace": "",
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 242,
            "description": "Animation class.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "item",
                    "description": "a paper.js Item instance, which will be animated.",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "properties to animate",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "fx": {
            "name": "fx",
            "shortname": "fx",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "animatePaper",
            "namespace": "",
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 582,
            "description": "Effects : A collection of shorthands for nice animations.",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 17,
            "description": "Performs an operation on two paper.Point() objects.\nReturns the result of : ` a operator b`.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_pointDiff",
            "params": [
                {
                    "name": "a",
                    "description": "a `paper.Point` object",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "a `paper.Point` object",
                    "type": "Object"
                },
                {
                    "name": "operator",
                    "description": "either `+` or `-`",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`{x: (a.x operator b.x), y: (a.y operator b.y)}`",
                "type": "Object"
            },
            "class": "Tween",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 47,
            "description": "This is the only function called in a objects `onFrame` handler.\nIf the objects has callbacks in it's `data._customHandlers` property,\neach of these is called.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "frameManagerHandler",
            "params": [
                {
                    "name": "ev",
                    "description": "The event object",
                    "type": "Object"
                }
            ],
            "class": "frameManager",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 82,
            "description": "Add a callback to a paper.js Item's `onFrame` event.\nThe Item itself will be the `thisValue` and the event object `ev` will be the first argument",
            "params": [
                {
                    "name": "item",
                    "description": "paper.js Item",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "An identifier for this callback",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "example": [
                "\n     animatePaper.frameManager.add(circle,\"goUp\",function(ev) {\n         // Animation logic\n     });"
            ],
            "itemtype": "method",
            "name": "add",
            "class": "frameManager",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 109,
            "description": "Remove a callback from an item's `onFrame` handler.",
            "params": [
                {
                    "name": "item",
                    "description": "paper.js Item object",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "The identifier of the callback you want to remove",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "remove",
            "class": "frameManager",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 128,
            "description": "The main animation interface.\nIt can take a single option object or an array of option objects\nif you want to chain animations without falling into Callback Hell.",
            "itemtype": "method",
            "name": "animate",
            "chainable": 1,
            "class": "animatePaper",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 213,
            "description": "Use this method to extend the private {{#crossLink \"easing\"}}{{/crossLink}} collection.\n\nThe `customEasings` object should like this :\n````\n    {\n        \"easingName\": function(p) { easing algorithm }\n    }\n````\nWhen used, easing functions are passed the following arguments :\n * `percent`\n * `percent * duration`\n\nEasing functions are obviously expected to return the eased percent.",
            "itemtype": "method",
            "name": "extendEasing",
            "params": [
                {
                    "name": "customEasings",
                    "description": "A collection of easing functions",
                    "type": "Object"
                }
            ],
            "class": "animatePaper",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 275,
            "description": "Called on each step of the animation.",
            "itemtype": "method",
            "name": "tick",
            "class": "Animation",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 309,
            "description": "Interrupts the animation. If `goToEnd` is true, all the properties are set to their final value.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "goToEnd",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "Animation",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 327,
            "description": "Called when the animations ends, naturally or using `.stop(true)`.",
            "itemtype": "method",
            "name": "end",
            "class": "Animation",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 351,
            "description": "Normalizes existing values from an Animation settings argument\nand provides default values if needed.",
            "itemtype": "method",
            "name": "_initializeSettings",
            "params": [
                {
                    "name": "settings",
                    "description": "a `settings` object or undefined",
                    "type": "Mixed"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Animation",
            "module": "animatePaper"
        },
        {
            "file": "/Users/camille/github/animatePaper.js/src/animatePaper.js",
            "line": 589,
            "description": "Grow a path",
            "itemtype": "method",
            "name": "grow",
            "params": [
                {
                    "name": "path",
                    "description": "a paper.js `Path` object",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "to",
                            "description": "an object with `x` and `y` properties",
                            "type": "Object"
                        },
                        {
                            "name": "easing",
                            "description": "defaults to `swing`",
                            "type": "String"
                        },
                        {
                            "name": "complete",
                            "description": "complete callback",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "class": "fx",
            "module": "animatePaper"
        }
    ],
    "warnings": []
}